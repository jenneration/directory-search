{"version":3,"sources":["components/EmpResults.js","components/EmpSearch.js","utils/API.js","components/DirectoryContainer.js","App.js","index.js"],"names":["EmpResults","props","className","scope","results","map","item","searchValue","length","name","first","toLowerCase","includes","last","email","phone","dob","date","src","picture","medium","alt","replace","login","uuid","thumbnail","EmpSearch","onChange","handleInputChange","value","search","type","id","axios","get","DirectoryContainer","state","searchEmp","API","then","res","setState","data","catch","err","console","log","event","target","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+PAmEeA,MAhEf,SAAoBC,GAClB,OACE,8BACE,wBAAOC,UAAU,qCAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIC,MAAM,6BAAV,sBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCAEGF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAEjBL,EAAMM,YAAYC,QAAUF,EAAKG,KAAKC,MAAMC,cAAcC,SAASX,EAAMM,YAAYI,gBACnFV,EAAMM,YAAYC,QAAUF,EAAKG,KAAKI,KAAKF,cAAcC,SAASX,EAAMM,YAAYI,gBACpFV,EAAMM,YAAYC,QAAUF,EAAKQ,MAAMH,cAAcC,SAASX,EAAMM,YAAYI,gBAChFV,EAAMM,YAAYC,QAAUF,EAAKS,MAAMJ,cAAcC,SAASX,EAAMM,YAAYI,gBAChFV,EAAMM,YAAYC,QAAUF,EAAKU,IAAIC,KAAKN,cAAcC,SAASX,EAAMM,YAAYI,eAEnF,+BACE,6BACE,qBAAKO,IAAKZ,EAAKa,QAAQC,OAAQC,IAAI,qBAErC,+BACGf,EAAKG,KAAKC,MADb,IACqBJ,EAAKG,KAAKI,QAE/B,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKS,MAAMO,QAAQ,wBAAyB,gBACjD,6BACGhB,EAAKU,IAAIC,KAAKK,QACb,8BACA,gBAZGhB,EAAKiB,MAAMC,MAiBjBvB,EAAMM,YAAYC,OAgBjB,KAhB0B,+BAC5B,6BACE,qBAAKU,IAAKZ,EAAKa,QAAQM,UAAWJ,IAAI,qBAExC,+BACGf,EAAKG,KAAKC,MADb,IACqBJ,EAAKG,KAAKI,QAE/B,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKS,QACV,6BACGT,EAAKU,IAAIC,KAAKK,QACb,8BACA,gBAZiChB,EAAKiB,MAAMC,iB,MClBjDE,MAtBf,SAAmBzB,GACf,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,gDAAf,SACI,+BACI,sBAAKA,UAAU,aAAf,UACI,yDACA,uBAAOA,UAAU,kBACbyB,SAAU1B,EAAM2B,kBAChBC,MAAO5B,EAAM6B,OACbrB,KAAK,SACLsB,KAAK,OACLC,GAAG,qB,iBCZhB,EACL,WACN,OAAOC,IAAMC,IAAI,0CCiDNC,E,4MAhDbC,MAAQ,CACNN,OAAQ,GACR1B,QAAS,I,EAWXiC,UAAY,WACVC,IACGC,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAS,CAAErC,QAASoC,EAAIE,KAAKtC,aAChDuC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,EAShChB,kBAAoB,SAACmB,GACnB,IAAMjB,EAASiB,EAAMC,OAAOvC,KACtBoB,EAAQkB,EAAMC,OAAOnB,MAC3B,EAAKY,SAAL,eACGX,EAASD,K,uDArBd,WACEoB,KAAKZ,c,oBAwBP,WACE,OACE,gCACE,cAAC,EAAD,CAEET,kBAAmBqB,KAAKrB,oBAE1B,cAAC,EAAD,CAAYxB,QAAS6C,KAAKb,MAAMhC,QAC9BG,YAAa0C,KAAKb,MAAMN,gB,GA1CDoB,aCElBC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCGTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe93c977.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/EmpResults.css\";\n\nfunction EmpResults(props) {\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col justify-content-center\">Employee</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">DOB</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          {props.results.map((item) =>\n            //In place of an \"if\" statement below = if search value has a length and item.property includes the search values/inputs...\n            props.searchValue.length && item.name.first.toLowerCase().includes(props.searchValue.toLowerCase()) ||\n              props.searchValue.length && item.name.last.toLowerCase().includes(props.searchValue.toLowerCase()) ||\n              props.searchValue.length && item.email.toLowerCase().includes(props.searchValue.toLowerCase()) ||\n              props.searchValue.length && item.phone.toLowerCase().includes(props.searchValue.toLowerCase()) ||\n              props.searchValue.length && item.dob.date.toLowerCase().includes(props.searchValue.toLowerCase()) ?\n              //cont. -- render that data here\n              <tr key={item.login.uuid}>\n                <td>\n                  <img src={item.picture.medium} alt=\"employee image\" />\n                </td>\n                <td>\n                  {item.name.first} {item.name.last}\n                </td>\n                <td>{item.email}</td>\n                <td>{item.phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"($1) $2-$3\")}</td>\n                <td>\n                  {item.dob.date.replace(\n                    /(\\d{4})\\-(\\d{2})\\-(\\d{2}).*/,\n                    \"$2-$3-$1\"\n                  )}\n                </td>\n              </tr>\n              //cont. -- or if there is nothing in the search value, render all data here\n              : !props.searchValue.length ? <tr key={item.login.uuid}>\n                <td>\n                  <img src={item.picture.thumbnail} alt=\"employee image\" />\n                </td>\n                <td>\n                  {item.name.first} {item.name.last}\n                </td>\n                <td>{item.email}</td>\n                <td>{item.phone}</td>\n                <td>\n                  {item.dob.date.replace(\n                    /(\\d{4})\\-(\\d{2})\\-(\\d{2}).*/,\n                    \"$2-$3-$1\"\n                  )}\n                </td>\n              </tr>\n                : null\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default EmpResults;\n","import React from \"react\";\nimport \"../styles/EmpSearch.css\"\n\nfunction EmpSearch(props) {\n    return (\n        <div className=\"wrap\">\n            <div className=\"row justify-content-center align-items-center\" >\n                <form >\n                    <div className=\"form-group\">\n                        <label>Search for Employee </label>\n                        <input className=\"form-control-lg\"\n                            onChange={props.handleInputChange}\n                            value={props.search}\n                            name=\"search\"\n                            type=\"text\"\n                            id=\"search\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nexport default EmpSearch;","import axios from \"axios\";\n\n\nexport default {\n  search: function() {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  }\n};\n\n\n","import React, { Component } from \"react\";\nimport EmpResults from \"./EmpResults\";\nimport EmpSearch from \"./EmpSearch\";\nimport API from \"../utils/API\";\n\nclass DirectoryContainer extends Component {\n  state = {\n    search: \"\",\n    results: []\n  };\n\n  //ORIGINAL\n\n  // Auto load search on page load\n  componentDidMount() {\n    this.searchEmp();\n  }\n\n  // API call\n  searchEmp = () => {\n    API.search()\n      .then((res) => this.setState({ results: res.data.results }))\n      .catch((err) => console.log(err));\n  };\n\n  // //Prevent default behavior to refresh page\n  // handleFormSubmit = event => {\n  //    event.preventDefault();=\n  // }\n\n  //Get value of input triggering onChange\n  handleInputChange = (event) => {\n    const search = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [search]: value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <EmpSearch\n          //handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <EmpResults results={this.state.results}\n          searchValue={this.state.search}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DirectoryContainer;\n\n// class VisiblePoets extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       poets: [],\n//       filteredPoets: []\n//     }\n//   }\n\n//   componentWillMount() {\n//     this.setState({\n//       poets,\n//       filteredPoets: poets\n//     })\n//   }\n\n//   filterPoets = (poetFilter) => {\n//     let filteredPoets = this.state.poets\n//     filteredPoets = filteredPoets.filter((poet) => {\n//       let poetName = poet.firstName.toLowerCase() + poet.lastName.toLowerCase()\n//       return poetName.indexOf(\n//         poetFilter.toLowerCase()) !== -1\n//     })\n//     this.setState({\n//       filteredPoets\n//     })\n//   }\n\n//   render() {\n//     return (\n//       <Poets poets={this.state.filteredPoets} match={this.props.match} onChange={this.filterPoets} />\n//     )\n//   }\n// }\n\n// export default Visib\n","import React from \"react\";\nimport DirectoryContainer from \"./components/DirectoryContainer\";\n\nfunction App() {\n  return <DirectoryContainer />\n}\n\nexport default App;","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n//Step-by-step notes\n// #1 - Created base files to start (root index.js, App.js, EmpResults to test connection/ability to render page)\n// #2 - Create utils folder & API query\n// --> begin DirectoryContainer.js for ajax call\n// --> updated file \"imports to reflect\"\n// --> set up EmpResults to receive data\n// #3 - Add functionality to search\n// #4 - format date and phone numbers\n// #5 - Style, ReadMe, Deploy\n"],"sourceRoot":""}